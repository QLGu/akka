package akka.http.model.japi;

public interface MediaTypes {
    final MediaType application_atom_xml = akka.http.model.MediaTypes.application$divatom$plusxml();
    final MediaType application_base64 = akka.http.model.MediaTypes.application$divbase64();
    final MediaType application_excel = akka.http.model.MediaTypes.application$divexcel();
    final MediaType application_font_woff = akka.http.model.MediaTypes.application$divfont$minuswoff();
    final MediaType application_gnutar = akka.http.model.MediaTypes.application$divgnutar();
    final MediaType application_java_archive = akka.http.model.MediaTypes.application$divjava$minusarchive();
    final MediaType application_javascript = akka.http.model.MediaTypes.application$divjavascript();
    final MediaType application_json = akka.http.model.MediaTypes.application$divjson();
    final MediaType application_json_patch_json = akka.http.model.MediaTypes.application$divjson$minuspatch$plusjson();
    final MediaType application_lha = akka.http.model.MediaTypes.application$divlha();
    final MediaType application_lzx = akka.http.model.MediaTypes.application$divlzx();
    final MediaType application_mspowerpoint = akka.http.model.MediaTypes.application$divmspowerpoint();
    final MediaType application_msword = akka.http.model.MediaTypes.application$divmsword();
    final MediaType application_octet_stream = akka.http.model.MediaTypes.application$divoctet$minusstream();
    final MediaType application_pdf = akka.http.model.MediaTypes.application$divpdf();
    final MediaType application_postscript = akka.http.model.MediaTypes.application$divpostscript();
    final MediaType application_rss_xml = akka.http.model.MediaTypes.application$divrss$plusxml();
    final MediaType application_soap_xml = akka.http.model.MediaTypes.application$divsoap$plusxml();
    final MediaType application_vnd_api_json = akka.http.model.MediaTypes.application$divvnd$u002Eapi$plusjson();
    final MediaType application_vnd_google_earth_kml_xml = akka.http.model.MediaTypes.application$divvnd$u002Egoogle$minusearth$u002Ekml$plusxml();
    final MediaType application_vnd_google_earth_kmz = akka.http.model.MediaTypes.application$divvnd$u002Egoogle$minusearth$u002Ekmz();
    final MediaType application_vnd_ms_fontobject = akka.http.model.MediaTypes.application$divvnd$u002Ems$minusfontobject();
    final MediaType application_vnd_oasis_opendocument_chart = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Echart();
    final MediaType application_vnd_oasis_opendocument_database = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Edatabase();
    final MediaType application_vnd_oasis_opendocument_formula = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Eformula();
    final MediaType application_vnd_oasis_opendocument_graphics = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Egraphics();
    final MediaType application_vnd_oasis_opendocument_image = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Eimage();
    final MediaType application_vnd_oasis_opendocument_presentation = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Epresentation();
    final MediaType application_vnd_oasis_opendocument_spreadsheet = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Espreadsheet();
    final MediaType application_vnd_oasis_opendocument_text = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Etext();
    final MediaType application_vnd_oasis_opendocument_text_master = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Etext$minusmaster();
    final MediaType application_vnd_oasis_opendocument_text_web = akka.http.model.MediaTypes.application$divvnd$u002Eoasis$u002Eopendocument$u002Etext$minusweb();
    final MediaType application_vnd_openxmlformats_officedocument_presentationml_presentation = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Epresentationml$u002Epresentation();
    final MediaType application_vnd_openxmlformats_officedocument_presentationml_slide = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Epresentationml$u002Eslide();
    final MediaType application_vnd_openxmlformats_officedocument_presentationml_slideshow = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Epresentationml$u002Eslideshow();
    final MediaType application_vnd_openxmlformats_officedocument_presentationml_template = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Epresentationml$u002Etemplate();
    final MediaType application_vnd_openxmlformats_officedocument_spreadsheetml_sheet = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Espreadsheetml$u002Esheet();
    final MediaType application_vnd_openxmlformats_officedocument_spreadsheetml_template = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Espreadsheetml$u002Etemplate();
    final MediaType application_vnd_openxmlformats_officedocument_wordprocessingml_document = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Ewordprocessingml$u002Edocument();
    final MediaType application_vnd_openxmlformats_officedocument_wordprocessingml_template = akka.http.model.MediaTypes.application$divvnd$u002Eopenxmlformats$minusofficedocument$u002Ewordprocessingml$u002Etemplate();
    final MediaType application_x_7z_compressed = akka.http.model.MediaTypes.application$divx$minus7z$minuscompressed();
    final MediaType application_x_ace_compressed = akka.http.model.MediaTypes.application$divx$minusace$minuscompressed();
    final MediaType application_x_apple_diskimage = akka.http.model.MediaTypes.application$divx$minusapple$minusdiskimage();
    final MediaType application_x_arc_compressed = akka.http.model.MediaTypes.application$divx$minusarc$minuscompressed();
    final MediaType application_x_bzip = akka.http.model.MediaTypes.application$divx$minusbzip();
    final MediaType application_x_bzip2 = akka.http.model.MediaTypes.application$divx$minusbzip2();
    final MediaType application_x_chrome_extension = akka.http.model.MediaTypes.application$divx$minuschrome$minusextension();
    final MediaType application_x_compress = akka.http.model.MediaTypes.application$divx$minuscompress();
    final MediaType application_x_compressed = akka.http.model.MediaTypes.application$divx$minuscompressed();
    final MediaType application_x_debian_package = akka.http.model.MediaTypes.application$divx$minusdebian$minuspackage();
    final MediaType application_x_dvi = akka.http.model.MediaTypes.application$divx$minusdvi();
    final MediaType application_x_font_truetype = akka.http.model.MediaTypes.application$divx$minusfont$minustruetype();
    final MediaType application_x_font_opentype = akka.http.model.MediaTypes.application$divx$minusfont$minusopentype();
    final MediaType application_x_gtar = akka.http.model.MediaTypes.application$divx$minusgtar();
    final MediaType application_x_gzip = akka.http.model.MediaTypes.application$divx$minusgzip();
    final MediaType application_x_latex = akka.http.model.MediaTypes.application$divx$minuslatex();
    final MediaType application_x_rar_compressed = akka.http.model.MediaTypes.application$divx$minusrar$minuscompressed();
    final MediaType application_x_redhat_package_manager = akka.http.model.MediaTypes.application$divx$minusredhat$minuspackage$minusmanager();
    final MediaType application_x_shockwave_flash = akka.http.model.MediaTypes.application$divx$minusshockwave$minusflash();
    final MediaType application_x_tar = akka.http.model.MediaTypes.application$divx$minustar();
    final MediaType application_x_tex = akka.http.model.MediaTypes.application$divx$minustex();
    final MediaType application_x_texinfo = akka.http.model.MediaTypes.application$divx$minustexinfo();
    final MediaType application_x_vrml = akka.http.model.MediaTypes.application$divx$minusvrml();
    final MediaType application_x_www_form_urlencoded = akka.http.model.MediaTypes.application$divx$minuswww$minusform$minusurlencoded();
    final MediaType application_x_x509_ca_cert = akka.http.model.MediaTypes.application$divx$minusx509$minusca$minuscert();
    final MediaType application_x_xpinstall = akka.http.model.MediaTypes.application$divx$minusxpinstall();
    final MediaType application_xhtml_xml = akka.http.model.MediaTypes.application$divxhtml$plusxml();
    final MediaType application_xml_dtd = akka.http.model.MediaTypes.application$divxml$minusdtd();
    final MediaType application_xml = akka.http.model.MediaTypes.application$divxml();
    final MediaType application_zip = akka.http.model.MediaTypes.application$divzip();
    final MediaType audio_aiff = akka.http.model.MediaTypes.audio$divaiff();
    final MediaType audio_basic = akka.http.model.MediaTypes.audio$divbasic();
    final MediaType audio_midi = akka.http.model.MediaTypes.audio$divmidi();
    final MediaType audio_mod = akka.http.model.MediaTypes.audio$divmod();
    final MediaType audio_mpeg = akka.http.model.MediaTypes.audio$divmpeg();
    final MediaType audio_ogg = akka.http.model.MediaTypes.audio$divogg();
    final MediaType audio_voc = akka.http.model.MediaTypes.audio$divvoc();
    final MediaType audio_vorbis = akka.http.model.MediaTypes.audio$divvorbis();
    final MediaType audio_voxware = akka.http.model.MediaTypes.audio$divvoxware();
    final MediaType audio_wav = akka.http.model.MediaTypes.audio$divwav();
    final MediaType audio_x_realaudio = akka.http.model.MediaTypes.audio$divx$minusrealaudio();
    final MediaType audio_x_psid = akka.http.model.MediaTypes.audio$divx$minuspsid();
    final MediaType audio_xm = akka.http.model.MediaTypes.audio$divxm();
    final MediaType audio_webm = akka.http.model.MediaTypes.audio$divwebm();
    final MediaType image_gif = akka.http.model.MediaTypes.image$divgif();
    final MediaType image_jpeg = akka.http.model.MediaTypes.image$divjpeg();
    final MediaType image_pict = akka.http.model.MediaTypes.image$divpict();
    final MediaType image_png = akka.http.model.MediaTypes.image$divpng();
    final MediaType image_svg_xml = akka.http.model.MediaTypes.image$divsvg$plusxml();
    final MediaType image_tiff = akka.http.model.MediaTypes.image$divtiff();
    final MediaType image_x_icon = akka.http.model.MediaTypes.image$divx$minusicon();
    final MediaType image_x_ms_bmp = akka.http.model.MediaTypes.image$divx$minusms$minusbmp();
    final MediaType image_x_pcx = akka.http.model.MediaTypes.image$divx$minuspcx();
    final MediaType image_x_pict = akka.http.model.MediaTypes.image$divx$minuspict();
    final MediaType image_x_quicktime = akka.http.model.MediaTypes.image$divx$minusquicktime();
    final MediaType image_x_rgb = akka.http.model.MediaTypes.image$divx$minusrgb();
    final MediaType image_x_xbitmap = akka.http.model.MediaTypes.image$divx$minusxbitmap();
    final MediaType image_x_xpixmap = akka.http.model.MediaTypes.image$divx$minusxpixmap();
    final MediaType image_webp = akka.http.model.MediaTypes.image$divwebp();
    final MediaType message_http = akka.http.model.MediaTypes.message$divhttp();
    final MediaType message_delivery_status = akka.http.model.MediaTypes.message$divdelivery$minusstatus();
    final MediaType message_rfc822 = akka.http.model.MediaTypes.message$divrfc822();
    final MediaType multipart_mixed = akka.http.model.MediaTypes.multipart$divmixed();
    final MediaType multipart_alternative = akka.http.model.MediaTypes.multipart$divalternative();
    final MediaType multipart_related = akka.http.model.MediaTypes.multipart$divrelated();
    final MediaType multipart_form_data = akka.http.model.MediaTypes.multipart$divform$minusdata();
    final MediaType multipart_signed = akka.http.model.MediaTypes.multipart$divsigned();
    final MediaType multipart_encrypted = akka.http.model.MediaTypes.multipart$divencrypted();
    final MediaType multipart_byteranges = akka.http.model.MediaTypes.multipart$divbyteranges();
    final MediaType text_asp = akka.http.model.MediaTypes.text$divasp();
    final MediaType text_cache_manifest = akka.http.model.MediaTypes.text$divcache$minusmanifest();
    final MediaType text_calendar = akka.http.model.MediaTypes.text$divcalendar();
    final MediaType text_css = akka.http.model.MediaTypes.text$divcss();
    final MediaType text_csv = akka.http.model.MediaTypes.text$divcsv();
    final MediaType text_html = akka.http.model.MediaTypes.text$divhtml();
    final MediaType text_mcf = akka.http.model.MediaTypes.text$divmcf();
    final MediaType text_plain = akka.http.model.MediaTypes.text$divplain();
    final MediaType text_richtext = akka.http.model.MediaTypes.text$divrichtext();
    final MediaType text_tab_separated_values = akka.http.model.MediaTypes.text$divtab$minusseparated$minusvalues();
    final MediaType text_uri_list = akka.http.model.MediaTypes.text$divuri$minuslist();
    final MediaType text_vnd_wap_wml = akka.http.model.MediaTypes.text$divvnd$u002Ewap$u002Ewml();
    final MediaType text_vnd_wap_wmlscript = akka.http.model.MediaTypes.text$divvnd$u002Ewap$u002Ewmlscript();
    final MediaType text_x_asm = akka.http.model.MediaTypes.text$divx$minusasm();
    final MediaType text_x_c = akka.http.model.MediaTypes.text$divx$minusc();
    final MediaType text_x_component = akka.http.model.MediaTypes.text$divx$minuscomponent();
    final MediaType text_x_h = akka.http.model.MediaTypes.text$divx$minush();
    final MediaType text_x_java_source = akka.http.model.MediaTypes.text$divx$minusjava$minussource();
    final MediaType text_x_pascal = akka.http.model.MediaTypes.text$divx$minuspascal();
    final MediaType text_x_script = akka.http.model.MediaTypes.text$divx$minusscript();
    final MediaType text_x_scriptcsh = akka.http.model.MediaTypes.text$divx$minusscriptcsh();
    final MediaType text_x_scriptelisp = akka.http.model.MediaTypes.text$divx$minusscriptelisp();
    final MediaType text_x_scriptksh = akka.http.model.MediaTypes.text$divx$minusscriptksh();
    final MediaType text_x_scriptlisp = akka.http.model.MediaTypes.text$divx$minusscriptlisp();
    final MediaType text_x_scriptperl = akka.http.model.MediaTypes.text$divx$minusscriptperl();
    final MediaType text_x_scriptperl_module = akka.http.model.MediaTypes.text$divx$minusscriptperl$minusmodule();
    final MediaType text_x_scriptphyton = akka.http.model.MediaTypes.text$divx$minusscriptphyton();
    final MediaType text_x_scriptrexx = akka.http.model.MediaTypes.text$divx$minusscriptrexx();
    final MediaType text_x_scriptscheme = akka.http.model.MediaTypes.text$divx$minusscriptscheme();
    final MediaType text_x_scriptsh = akka.http.model.MediaTypes.text$divx$minusscriptsh();
    final MediaType text_x_scripttcl = akka.http.model.MediaTypes.text$divx$minusscripttcl();
    final MediaType text_x_scripttcsh = akka.http.model.MediaTypes.text$divx$minusscripttcsh();
    final MediaType text_x_scriptzsh = akka.http.model.MediaTypes.text$divx$minusscriptzsh();
    final MediaType text_x_server_parsed_html = akka.http.model.MediaTypes.text$divx$minusserver$minusparsed$minushtml();
    final MediaType text_x_setext = akka.http.model.MediaTypes.text$divx$minussetext();
    final MediaType text_x_sgml = akka.http.model.MediaTypes.text$divx$minussgml();
    final MediaType text_x_speech = akka.http.model.MediaTypes.text$divx$minusspeech();
    final MediaType text_x_uuencode = akka.http.model.MediaTypes.text$divx$minusuuencode();
    final MediaType text_x_vcalendar = akka.http.model.MediaTypes.text$divx$minusvcalendar();
    final MediaType text_x_vcard = akka.http.model.MediaTypes.text$divx$minusvcard();
    final MediaType text_xml = akka.http.model.MediaTypes.text$divxml();
    final MediaType video_avs_video = akka.http.model.MediaTypes.video$divavs$minusvideo();
    final MediaType video_divx = akka.http.model.MediaTypes.video$divdivx();
    final MediaType video_gl = akka.http.model.MediaTypes.video$divgl();
    final MediaType video_mp4 = akka.http.model.MediaTypes.video$divmp4();
    final MediaType video_mpeg = akka.http.model.MediaTypes.video$divmpeg();
    final MediaType video_ogg = akka.http.model.MediaTypes.video$divogg();
    final MediaType video_quicktime = akka.http.model.MediaTypes.video$divquicktime();
    final MediaType video_x_dv = akka.http.model.MediaTypes.video$divx$minusdv();
    final MediaType video_x_flv = akka.http.model.MediaTypes.video$divx$minusflv();
    final MediaType video_x_motion_jpeg = akka.http.model.MediaTypes.video$divx$minusmotion$minusjpeg();
    final MediaType video_x_ms_asf = akka.http.model.MediaTypes.video$divx$minusms$minusasf();
    final MediaType video_x_msvideo = akka.http.model.MediaTypes.video$divx$minusmsvideo();
    final MediaType video_x_sgi_movie = akka.http.model.MediaTypes.video$divx$minussgi$minusmovie();
    final MediaType video_webm = akka.http.model.MediaTypes.video$divwebm();
}
